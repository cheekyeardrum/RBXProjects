-- Clean Hub (Full Integrated Version, Fixed with State Persistence)

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer
local guiParent = CoreGui

-- Sizes
local HUB_SZ = UDim2.new(0,700,0,450)
local MINIMIZED_SZ = UDim2.new(0,200,0,40)

-- Tween helper
local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local function tween(obj, props)
    local tw = TweenService:Create(obj, tweenInfo, props)
    tw:Play()
    return tw
end

local function round(ui, radius)
    local c = Instance.new("UICorner", ui)
    c.CornerRadius = UDim.new(0, radius or 8)
end

-- ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CleanHubGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = guiParent

-- Main Frame
local frame = Instance.new("Frame", screenGui)
frame.Name = "MainFrame"
frame.Size = HUB_SZ
frame.Position = UDim2.new(0.5,0,0.5,0)
frame.AnchorPoint = Vector2.new(0.5,0.5)
frame.BackgroundColor3 = Color3.fromRGB(20,20,20)
frame.Active = true
frame.BorderSizePixel = 0
round(frame,10)

-- Dragging
local dragging, dragInput, dragStart, startPos
UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(
            startPos.X.Scale, startPos.X.Offset+delta.X,
            startPos.Y.Scale, startPos.Y.Offset+delta.Y
        )
    end
end)

local function enableDrag(target)
    target.InputBegan:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.MouseButton1 or i.UserInputType==Enum.UserInputType.Touch then
            dragging = true
            dragStart = i.Position
            startPos = frame.Position
            i.Changed:Connect(function()
                if i.UserInputState==Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    target.InputChanged:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.MouseMovement or i.UserInputType==Enum.UserInputType.Touch then
            dragInput = i
        end
    end)
end

-- Top Bar
local bar=Instance.new("Frame",frame)
bar.Size=UDim2.new(1,0,0,40)
bar.Position=UDim2.new(0,0,0,0)
bar.BackgroundColor3=Color3.fromRGB(40,40,40)
bar.Active=true
round(bar,10)
enableDrag(bar)

local title=Instance.new("TextLabel",bar)
title.Size=UDim2.new(1,-120,1,0)
title.Position = UDim2.new(0,10,0,0)
title.BackgroundTransparency=1
title.Font=Enum.Font.SourceSansBold
title.TextSize=24
title.Text="Clean Hub"
title.TextColor3=Color3.new(1,1,1)
title.TextXAlignment=Enum.TextXAlignment.Left

local closeBtn=Instance.new("TextButton",bar)
closeBtn.Size=UDim2.new(0,30,0,30)
closeBtn.Position=UDim2.new(1,-40,0,5)
closeBtn.Text="X"
closeBtn.Font=Enum.Font.SourceSansBold
closeBtn.TextSize=18
closeBtn.BackgroundColor3=Color3.fromRGB(200,50,50)
closeBtn.TextColor3=Color3.new(1,1,1)
round(closeBtn,4)

local minBtn=Instance.new("TextButton",bar)
minBtn.Size=UDim2.new(0,30,0,30)
minBtn.Position=UDim2.new(1,-80,0,5)
minBtn.Text="-"
minBtn.Font=Enum.Font.SourceSansBold
minBtn.TextSize=22
minBtn.BackgroundColor3=Color3.fromRGB(100,100,100)
minBtn.TextColor3=Color3.new(1,1,1)
round(minBtn,4)

-- Tabs + Content
local tabsFrame=Instance.new("Frame",frame)
tabsFrame.Size=UDim2.new(0,140,1,-60)
tabsFrame.Position=UDim2.new(0,0,0,50)
tabsFrame.BackgroundTransparency=1

local contentFrame=Instance.new("Frame",frame)
contentFrame.Size=UDim2.new(1,-140,1,-60)
contentFrame.Position=UDim2.new(0,140,0,50)
contentFrame.BackgroundTransparency=1
enableDrag(contentFrame)

---------------------------------------------------
-- AutoBuy Tab (no toggle state needed)
---------------------------------------------------
local function buildAutoBuyTab()
    for _,v in pairs(contentFrame:GetChildren()) do v:Destroy() end

    local label = Instance.new("TextLabel", contentFrame)
    label.Size = UDim2.new(1,-20,0,40)
    label.Position = UDim2.new(0,10,0,10)
    label.BackgroundTransparency = 1
    label.Text = "Auto Buy Items"
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.SourceSansBold
    label.TextSize = 22

    -- (unchanged buying buttons...)
end

---------------------------------------------------
-- AutoCollect Tab
---------------------------------------------------
local collecting = false
local collectThread

local function buildAutoCollectTab()
    for _,v in pairs(contentFrame:GetChildren()) do v:Destroy() end

    local label = Instance.new("TextLabel", contentFrame)
    label.Size = UDim2.new(1,-20,0,40)
    label.Position = UDim2.new(0,10,0,10)
    label.BackgroundTransparency = 1
    label.Text = "Auto Collect Money (Your Tycoon Only)"
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.SourceSansBold
    label.TextSize = 22

    local toggle = Instance.new("TextButton", contentFrame)
    toggle.Size = UDim2.new(0,200,0,50)
    toggle.Position = UDim2.new(0,20,0,60)
    toggle.Font = Enum.Font.SourceSansBold
    toggle.TextSize = 20
    toggle.TextColor3 = Color3.new(1,1,1)
    round(toggle,8)

    -- restore state
    if collecting then
        toggle.Text = "ON"
        toggle.BackgroundColor3 = Color3.fromRGB(50,150,50)
    else
        toggle.Text = "OFF"
        toggle.BackgroundColor3 = Color3.fromRGB(150,50,50)
    end

    toggle.MouseButton1Click:Connect(function()
        collecting = not collecting
        if collecting then
            toggle.Text = "ON"
            toggle.BackgroundColor3 = Color3.fromRGB(50,150,50)
            collectThread = task.spawn(function()
                while collecting do
                    -- your collect logic
                    task.wait(2)
                end
            end)
        else
            toggle.Text = "OFF"
            toggle.BackgroundColor3 = Color3.fromRGB(150,50,50)
            if collectThread then
                task.cancel(collectThread)
                collectThread = nil
            end
        end
    end)
end

---------------------------------------------------
-- Break Blocks Tab
---------------------------------------------------
local breaking = false
local breakConnection
local serverActive = false
local serverConnection
local events = ReplicatedStorage:WaitForChild("Events")

local function buildBreakBlocksTab()
    for _,v in pairs(contentFrame:GetChildren()) do v:Destroy() end

    local label = Instance.new("TextLabel", contentFrame)
    label.Size = UDim2.new(1,-20,0,40)
    label.Position = UDim2.new(0,10,0,10)
    label.BackgroundTransparency = 1
    label.Text = "Break Blocks (With Animations)"
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.SourceSansBold
    label.TextSize = 22

    -- Plot Box Button
    local plotBtn = Instance.new("TextButton", contentFrame)
    plotBtn.Size = UDim2.new(0,200,0,50)
    plotBtn.Position = UDim2.new(0,20,0,60)
    plotBtn.Font = Enum.Font.SourceSansBold
    plotBtn.TextSize = 20
    plotBtn.TextColor3 = Color3.new(1,1,1)
    round(plotBtn,8)

    if breaking then
        plotBtn.Text = "Plot Box (ON)"
        plotBtn.BackgroundColor3 = Color3.fromRGB(50,150,50)
    else
        plotBtn.Text = "Plot Box"
        plotBtn.BackgroundColor3 = Color3.fromRGB(150,50,50)
    end

    plotBtn.MouseButton1Click:Connect(function()
        breaking = not breaking
        if breaking then
            plotBtn.Text = "Plot Box (ON)"
            plotBtn.BackgroundColor3 = Color3.fromRGB(50,150,50)
            breakConnection = task.spawn(function()
                while breaking do
                    events.Touch:FireServer("20")
                    task.wait(1)
                end
            end)
        else
            plotBtn.Text = "Plot Box"
            plotBtn.BackgroundColor3 = Color3.fromRGB(150,50,50)
            if breakConnection then
                task.cancel(breakConnection)
                breakConnection = nil
            end
        end
    end)

    -- Server Box Button
    local serverBtn = Instance.new("TextButton", contentFrame)
    serverBtn.Size = UDim2.new(0,200,0,50)
    serverBtn.Position = UDim2.new(0,20,0,130)
    serverBtn.Font = Enum.Font.SourceSansBold
    serverBtn.TextSize = 20
    serverBtn.TextColor3 = Color3.new(1,1,1)
    round(serverBtn,8)

    if serverActive then
        serverBtn.Text = "Server Box (ON)"
        serverBtn.BackgroundColor3 = Color3.fromRGB(50,150,50)
    else
        serverBtn.Text = "Server Box"
        serverBtn.BackgroundColor3 = Color3.fromRGB(150,50,50)
    end

    serverBtn.MouseButton1Click:Connect(function()
        serverActive = not serverActive
        if serverActive then
            serverBtn.Text = "Server Box (ON)"
            serverBtn.BackgroundColor3 = Color3.fromRGB(50,150,50)
            serverConnection = task.spawn(function()
                while serverActive do
                    events.ServerBox:FireServer("21", true)
                    task.wait(1.2)
                end
            end)
        else
            serverBtn.Text = "Server Box"
            serverBtn.BackgroundColor3 = Color3.fromRGB(150,50,50)
            if serverConnection then
                task.cancel(serverConnection)
                serverConnection = nil
            end
        end
    end)
end

---------------------------------------------------
-- Tabs
---------------------------------------------------
local tabNames={"AutoBuy","AutoCollect","Break Blocks"}
local tabFuncs={buildAutoBuyTab,buildAutoCollectTab,buildBreakBlocksTab}

for i,name in ipairs(tabNames) do
    local btn = Instance.new("TextButton", tabsFrame)
    btn.Size = UDim2.new(1,0,0,40)
    btn.Position = UDim2.new(0,0,0,(i-1)*45)
    btn.Text = name
    btn.Font = Enum.Font.SourceSansBold
    btn.TextSize = 16
    btn.BackgroundColor3 = Color3.fromRGB(50,50,50)
    btn.TextColor3 = Color3.new(1,1,1)
    round(btn,6)
    btn.MouseButton1Click:Connect(tabFuncs[i])
end

-- Close/Minimize
closeBtn.MouseButton1Click:Connect(function() screenGui:Destroy() end)
minBtn.MouseButton1Click:Connect(function()
    if frame.Size==HUB_SZ then
        tween(frame,{Size=MINIMIZED_SZ})
    else
        tween(frame,{Size=HUB_SZ})
    end
end)

-- Default tab
buildAutoBuyTab()
