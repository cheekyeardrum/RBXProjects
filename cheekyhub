-- ---------------------
-- UNIVERSAL PLAYER UTILITIES TAB
-- ---------------------

-- Tab Frame
local utilTab = Instance.new("Frame", contentFrame)
utilTab.Size = UDim2.new(1,0,1,0)
utilTab.BackgroundTransparency = 1
utilTab.Visible = true -- can switch to false if you add multiple tabs

-- Section Title
local utilTitle = Instance.new("TextLabel", utilTab)
utilTitle.Size = UDim2.new(1,0,0,30)
utilTitle.Position = UDim2.new(0,0,0,0)
utilTitle.BackgroundTransparency = 1
utilTitle.Font = Enum.Font.GothamBold
utilTitle.TextSize = 20
utilTitle.Text = "Player Utilities"
utilTitle.TextColor3 = Color3.fromRGB(0,255,180)
utilTitle.TextXAlignment = Enum.TextXAlignment.Left

-- Helper function to create sliders
local function createSlider(parent, text, min, max, default, callback)
    local frame = Instance.new("Frame", parent)
    frame.Size = UDim2.new(1,0,0,40)
    frame.BackgroundTransparency = 1

    local label = Instance.new("TextLabel", frame)
    label.Size = UDim2.new(0.6,0,1,0)
    label.Position = UDim2.new(0,5,0,0)
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.Gotham
    label.TextSize = 16
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255,255,255)
    label.TextXAlignment = Enum.TextXAlignment.Left

    local slider = Instance.new("TextBox", frame)
    slider.Size = UDim2.new(0.35,0,0.5,0)
    slider.Position = UDim2.new(0.62,0,0.25,0)
    slider.BackgroundColor3 = Color3.fromRGB(40,40,40)
    slider.TextColor3 = Color3.fromRGB(0,255,180)
    slider.Text = tostring(default)
    slider.ClearTextOnFocus = false
    round(slider,6)

    slider.FocusLost:Connect(function()
        local val = tonumber(slider.Text)
        if val then
            val = math.clamp(val,min,max)
            slider.Text = tostring(val)
            callback(val)
        end
    end)
end

-- Helper function to create toggles
local function createToggle(parent, text, default)
    local btn = Instance.new("TextButton", parent)
    btn.Size = UDim2.new(1,0,0,30)
    btn.BackgroundColor3 = default and Color3.fromRGB(0,150,0) or Color3.fromRGB(60,60,60)
    btn.TextColor3 = Color3.new(1,1,1)
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 16
    btn.Text = text
    round(btn,6)
    local enabled = default
    btn.MouseButton1Click:Connect(function()
        enabled = not enabled
        btn.BackgroundColor3 = enabled and Color3.fromRGB(0,150,0) or Color3.fromRGB(60,60,60)
    end)
    return btn, function() return enabled end
end

-- ---------------------
-- LOCAL PLAYER UTILITIES
-- ---------------------
local hum = player.Character and player.Character:FindFirstChildOfClass("Humanoid")

-- WalkSpeed Slider
createSlider(utilTab, "WalkSpeed (16-300)", 16, 300, 16, function(v)
    local hum = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
    if hum then pcall(function() hum.WalkSpeed = v end) end
end)

-- JumpPower Slider
createSlider(utilTab, "JumpPower (50-500)", 50, 500, 50, function(v)
    local hum = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
    if hum then pcall(function() hum.JumpPower = v end) end
end)

-- Infinite Jump
local infBtn, infGet = createToggle(utilTab, "Infinite Jump", false)
game:GetService("UserInputService").JumpRequest:Connect(function()
    if infGet() then
        local hum = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
        if hum then pcall(function() hum:ChangeState(Enum.HumanoidStateType.Jumping) end) end
    end
end)

-- Noclip
local noclipBtn, noclipGet = createToggle(utilTab, "Noclip", false)
RunService.Stepped:Connect(function()
    if noclipGet() and player.Character then
        for _,p in ipairs(player.Character:GetDescendants()) do
            if p:IsA("BasePart") then p.CanCollide = false end
        end
    end
end)

-- Fly
local flyBtn, flyGet = createToggle(utilTab, "Fly", false)
local flySpeed = 80
createSlider(utilTab, "Fly Speed (50-300)", 50, 300, 80, function(v) flySpeed = v end)
local flyVel
RunService.RenderStepped:Connect(function()
    if flyGet() and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local hrp = player.Character.HumanoidRootPart
        if not flyVel or not flyVel.Parent then
            flyVel = Instance.new("BodyVelocity")
            flyVel.MaxForce = Vector3.new(1e5,1e5,1e5)
            flyVel.Velocity = Vector3.new(0,0,0)
            flyVel.Parent = hrp
        end
        local dir = Vector3.new()
        local cam = workspace.CurrentCamera
        local UIS = game:GetService("UserInputService")
        if UIS:IsKeyDown(Enum.KeyCode.W) then dir += cam.CFrame.LookVector end
        if UIS:IsKeyDown(Enum.KeyCode.S) then dir -= cam.CFrame.LookVector end
        if UIS:IsKeyDown(Enum.KeyCode.A) then dir -= cam.CFrame.RightVector end
        if UIS:IsKeyDown(Enum.KeyCode.D) then dir += cam.CFrame.RightVector end
        if dir.Magnitude > 0.1 then
            flyVel.Velocity = dir.Unit * flySpeed
        else
            flyVel.Velocity = Vector3.new(0,0,0)
        end
    else
        if flyVel and flyVel.Parent then flyVel:Destroy(); flyVel=nil end
    end
end)
