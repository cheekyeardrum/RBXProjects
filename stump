-- CheekyUI Fruit Automation Hub üåø
-- By Cheeky | Collects and Sells Fruits Automatically

pcall(function()
    game:GetService('CoreGui'):FindFirstChild('ui'):Remove()
end)

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local Player = Players.LocalPlayer
local Library = {}

-- // UI Base
local ui = Instance.new("ScreenGui", game:GetService("CoreGui"))
ui.Name = "ui"

local mainFrame = Instance.new("Frame", ui)
mainFrame.Size = UDim2.new(0, 400, 0, 300)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true

local title = Instance.new("TextLabel", mainFrame)
title.Size = UDim2.new(1, 0, 0, 40)
title.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
title.Text = "üçØ CheekyUI - Fruit Hub"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamBold
title.TextSize = 18

-- // Button Creation Function
local function createButton(name, parent, callback)
    local btn = Instance.new("TextButton", parent)
    btn.Size = UDim2.new(1, -20, 0, 30)
    btn.Position = UDim2.new(0, 10, 0, #parent:GetChildren() * 35)
    btn.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
    btn.Text = name
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 14
    btn.MouseButton1Click:Connect(callback)

    btn.MouseEnter:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(65, 65, 85)}):Play()
    end)
    btn.MouseLeave:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(45, 45, 55)}):Play()
    end)
end

-- // Collect All Fruits Button
createButton("üçí Loop Collect All Fruits", mainFrame, function()
    task.spawn(function()
        print("Collecting all fruits...")
        local plots = workspace:WaitForChild("PlayerPlots"):GetChildren()
        for _, plot in ipairs(plots) do
            if plot:FindFirstChild("Owner") and plot.Owner.Value == Player then
                for _, tree in ipairs(plot.Trees:GetChildren()) do
                    for stumpIndex, stump in ipairs(tree:GetChildren()) do
                        if stump:FindFirstChild("Models") then
                            for _, model in ipairs(stump.Models:GetChildren()) do
                                if string.find(model.Name, "Fruit") then
                                    for fruitNum = 1, 2 do
                                        local args = {
                                            "PickFruit",
                                            1,
                                            stumpIndex,
                                            fruitNum,
                                            "Fruit" .. fruitNum
                                        }
                                        local remote = ReplicatedStorage.Framework.Features.FruitTreeSystem.TreeStumpUtil.RemoteEvent
                                        remote:FireServer(unpack(args))
                                        task.wait(0.1)
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        print("‚úÖ All fruits collected!")
    end)
end)

-- // Sell All Fruits Button
createButton("üçé Sell All Fruits", mainFrame, function()
    local args = { "RequestGiveFruits" }
    local remote = ReplicatedStorage.Framework.Features.FruitStallSystem.FruitStallUtil.RemoteEvent
    remote:FireServer(unpack(args))
    print("‚úÖ Sold all fruits!")
end)

-- // Auto Sell Toggle
local autoSell = false
createButton("üîÅ Toggle Auto Sell", mainFrame, function()
    autoSell = not autoSell
    print(autoSell and "‚úÖ Auto Sell Enabled" or "‚õî Auto Sell Disabled")

    task.spawn(function()
        while autoSell do
            local args = { "RequestGiveFruits" }
            local remote = ReplicatedStorage.Framework.Features.FruitStallSystem.FruitStallUtil.RemoteEvent
            remote:FireServer(unpack(args))
            task.wait(3)
        end
    end)
end)

print("üåø CheekyUI Fruit Hub Loaded Successfully!")
