-- ================= Auto-Delete Pets Tab =================
local function buildAutoDeleteTab()
    for _,v in pairs(contentFrame:GetChildren()) do v:Destroy() end

    local label = Instance.new("TextLabel", contentFrame)
    label.Size = UDim2.new(0.6,-10,0,30)
    label.Position = UDim2.new(0,10,0,10)
    label.BackgroundTransparency = 1
    label.Text = "Auto-Delete Pets"
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.SourceSansBold
    label.TextSize = 18
    label.TextXAlignment = Enum.TextXAlignment.Left

    local typeBox = Instance.new("TextBox", contentFrame)
    typeBox.Size = UDim2.new(0.6,0,0,30)
    typeBox.Position = UDim2.new(0,10,0,50)
    typeBox.PlaceholderText = "Enter Pet Type (e.g. Sigma Boy)"
    typeBox.Text = ""
    typeBox.Font = Enum.Font.SourceSans
    typeBox.TextSize = 16
    typeBox.BackgroundColor3 = Color3.fromRGB(40,40,40)
    typeBox.TextColor3 = Color3.new(1,1,1)
    round(typeBox,6)

    local deleteBtn = Instance.new("TextButton", contentFrame)
    deleteBtn.Size = UDim2.new(0.35,0,0,30)
    deleteBtn.Position = UDim2.new(0.65,0,0,50)
    deleteBtn.Text = "OFF"
    deleteBtn.Font = Enum.Font.SourceSansBold
    deleteBtn.TextSize = 16
    deleteBtn.BackgroundColor3 = Color3.fromRGB(88,101,242)
    deleteBtn.TextColor3 = Color3.new(1,1,1)
    round(deleteBtn,6)

    -- Fetch all pets via the Pets remote
    local function fetchAllPets()
        local args = {{Info="GetPets"}}
        local success, pets = pcall(function()
            return PetsRemote:InvokeServer(unpack(args))
        end)
        if success and type(pets) == "table" then
            return pets
        else
            warn("AutoDelete: Failed to fetch pets from server.")
            return {}
        end
    end

    -- Delete pets by type
    local function deletePetsByType(petType)
        if not petType or petType:match("^%s*$") then return end
        local pets = fetchAllPets()
        local deletedCount = 0
        for _,pet in ipairs(pets) do
            local name = pet.PetName or pet.Type or pet.Name
            local id = pet.PetId
            if name and id and name:lower() == petType:lower() then
                local args = {{Info="DeletePet", PetId=id}}
                pcall(function() PetsRemote:FireServer(unpack(args)) end)
                deletedCount = deletedCount + 1
                warn(("AutoDelete: Requested deletion of '%s' (PetId=%s)"):format(name,id))
            end
        end
        if deletedCount == 0 then
            warn("AutoDelete: No pets matched type:", petType)
        end
    end

    deleteBtn.MouseButton1Click:Connect(function()
        autoDelete = not autoDelete
        deleteBtn.Text = autoDelete and "ON" or "OFF"
        deleteBtn.BackgroundColor3 = autoDelete and Color3.fromRGB(0,170,0) or Color3.fromRGB(88,101,242)
        targetPetType = typeBox.Text

        if autoDelete and targetPetType ~= "" then
            task.spawn(function()
                while autoDelete do
                    deletePetsByType(targetPetType)
                    task.wait(1) -- adjust delay as needed
                end
            end)
        elseif autoDelete and (not targetPetType or targetPetType == "") then
            warn("AutoDelete turned on but no pet type specified.")
            autoDelete = false
            deleteBtn.Text = "OFF"
            deleteBtn.BackgroundColor3 = Color3.fromRGB(88,101,242)
        end
    end)
end
