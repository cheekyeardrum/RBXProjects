-- Cheeky Hub V1.0 (Universal)
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local guiParent = game:GetService("CoreGui")

-- Hub Sizes
local HUB_SZ = UDim2.new(0, 700, 0, 450)
local MINIMIZED_SZ = UDim2.new(0, 200, 0, 40)

-- Tween helper
local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local function tween(obj, props)
    local tw = TweenService:Create(obj, tweenInfo, props)
    tw:Play()
    return tw
end

-- Rounded corners
local function round(ui, radius)
    local c = Instance.new("UICorner", ui)
    c.CornerRadius = UDim.new(0, radius or 8)
end

-- ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CheekyHubGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = guiParent

-- Main Frame
local frame = Instance.new("Frame", screenGui)
frame.Name = "MainFrame"
frame.Size = HUB_SZ
frame.Position = UDim2.new(0.5,0,0.5,0)
frame.AnchorPoint = Vector2.new(0.5,0.5)
frame.BackgroundColor3 = Color3.fromRGB(15,15,15)
frame.BorderSizePixel = 0
round(frame, 16)

-- Neon Edge Glow
local edge = Instance.new("UIStroke", frame)
edge.Color = Color3.fromRGB(0,255,180)
edge.Thickness = 3
edge.Transparency = 0.3
edge.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

-- Shadow/Glow behind frame
local shadow = Instance.new("Frame", screenGui)
shadow.Size = frame.Size
shadow.Position = frame.Position
shadow.AnchorPoint = frame.AnchorPoint
shadow.BackgroundColor3 = Color3.fromRGB(0,255,180)
shadow.BackgroundTransparency = 0.95
shadow.ZIndex = frame.ZIndex - 1
round(shadow, 18)

-- Dragging
local dragging, dragInput, dragStart, startPos
UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(
            startPos.X.Scale, startPos.X.Offset+delta.X,
            startPos.Y.Scale, startPos.Y.Offset+delta.Y
        )
        shadow.Position = frame.Position
    end
end)

local function enableDrag(target)
    target.InputBegan:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.MouseButton1 or i.UserInputType==Enum.UserInputType.Touch then
            dragging = true
            dragStart = i.Position
            startPos = frame.Position
            i.Changed:Connect(function()
                if i.UserInputState==Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    target.InputChanged:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.MouseMovement or i.UserInputType==Enum.UserInputType.Touch then
            dragInput = i
        end
    end)
end
enableDrag(frame)

-- Top Bar
local bar = Instance.new("Frame", frame)
bar.Size = UDim2.new(1,0,0,40)
bar.Position = UDim2.new(0,0,0,0)
bar.BackgroundColor3 = Color3.fromRGB(25,25,25)
bar.BorderSizePixel = 0
round(bar,16)
enableDrag(bar)

local title = Instance.new("TextLabel", bar)
title.Size = UDim2.new(1,-80,1,0)
title.Position = UDim2.new(0,15,0,0)
title.BackgroundTransparency = 1
title.Font = Enum.Font.GothamBold
title.TextSize = 22
title.Text = "Cheeky Hub V1.0"
title.TextColor3 = Color3.fromRGB(0,255,180)
title.TextXAlignment = Enum.TextXAlignment.Left

-- Close Button
local closeBtn = Instance.new("TextButton", bar)
closeBtn.Size = UDim2.new(0,30,0,30)
closeBtn.Position = UDim2.new(1,-40,0,5)
closeBtn.BackgroundColor3 = Color3.fromRGB(180,50,50)
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 18
closeBtn.Text = "X"
closeBtn.TextColor3 = Color3.fromRGB(255,255,255)
round(closeBtn,6)
closeBtn.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

-- Minimize Button
local minBtn = Instance.new("TextButton", bar)
minBtn.Size = UDim2.new(0,30,0,30)
minBtn.Position = UDim2.new(1,-80,0,5)
minBtn.BackgroundColor3 = Color3.fromRGB(80,80,80)
minBtn.Font = Enum.Font.GothamBold
minBtn.TextSize = 18
minBtn.Text = "-"
minBtn.TextColor3 = Color3.fromRGB(255,255,255)
round(minBtn,6)
minBtn.MouseButton1Click:Connect(function()
    if frame.Size == HUB_SZ then
        tween(frame, {Size = MINIMIZED_SZ})
        tween(shadow, {Size = MINIMIZED_SZ})
    else
        tween(frame, {Size = HUB_SZ})
        tween(shadow, {Size = HUB_SZ})
    end
end)

-- Content Frame
local contentFrame = Instance.new("Frame", frame)
contentFrame.Size = UDim2.new(1,-20,1,-60)
contentFrame.Position = UDim2.new(0,10,0,50)
contentFrame.BackgroundTransparency = 1

-- Neon lines
local topLine = Instance.new("Frame", contentFrame)
topLine.Size = UDim2.new(1,0,0,2)
topLine.Position = UDim2.new(0,0,0,0)
topLine.BackgroundColor3 = Color3.fromRGB(0,255,180)
topLine.BackgroundTransparency = 0.5

local bottomLine = Instance.new("Frame", contentFrame)
bottomLine.Size = UDim2.new(1,0,0,2)
bottomLine.Position = UDim2.new(0,0,1,-2)
bottomLine.BackgroundColor3 = Color3.fromRGB(0,255,180)
bottomLine.BackgroundTransparency = 0.5

-- ---------------------
-- UNIVERSAL SECTION
-- ---------------------
-- Section Frame
local universalSec = Instance.new("Frame", contentFrame)
universalSec.Size = UDim2.new(1,0,1,0)
universalSec.Position = UDim2.new(0,0,0,0)
universalSec.BackgroundTransparency = 1

-- Toggle Helper
function createToggle(parent, text, default, callback)
    local btn = Instance.new("TextButton", parent)
    btn.Size = UDim2.new(0, 200, 0, 30)
    btn.Position = UDim2.new(0,10,#parent:GetChildren()*35)
    btn.BackgroundColor3 = default and Color3.fromRGB(0,150,0) or Color3.fromRGB(60,60,60)
    btn.Text = text
    btn.Font = Enum.Font.GothamBold
    btn.TextColor3 = Color3.fromRGB(255,255,255)
    btn.TextSize = 16
    round(btn,6)
    local enabled = default
    btn.MouseButton1Click:Connect(function()
        enabled = not enabled
        btn.BackgroundColor3 = enabled and Color3.fromRGB(0,150,0) or Color3.fromRGB(60,60,60)
        callback(enabled)
    end)
    return btn
end

-- ---------------------
-- Walk Speed
-- ---------------------
local walkSpeed = 16
createToggle(universalSec,"Infinite Walk",false,function(enabled)
    walkSpeed = enabled and 300 or 16
    local hum = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
    if hum then hum.WalkSpeed = walkSpeed end
end)

-- ---------------------
-- Infinite Jump
-- ---------------------
local infJump = false
createToggle(universalSec,"Infinite Jump",false,function(enabled)
    infJump = enabled
end)

UserInputService.JumpRequest:Connect(function()
    if infJump then
        local hum = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
        if hum then hum:ChangeState(Enum.HumanoidStateType.Jumping) end
    end
end)

-- ---------------------
-- Noclip
-- ---------------------
local noclip = false
createToggle(universalSec,"Noclip",false,function(enabled) noclip = enabled end)

RunService.Stepped:Connect(function()
    if noclip and player.Character then
        for _,p in ipairs(player.Character:GetDescendants()) do
            if p:IsA("BasePart") then p.CanCollide = false end
        end
    end
end)

-- ---------------------
-- Fly
-- ---------------------
local fly = false
local flySpeed = 80
local flyVel
createToggle(universalSec,"Fly",false,function(enabled) fly = enabled end)

RunService.RenderStepped:Connect(function()
    if fly and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local hrp = player.Character.HumanoidRootPart
        if not flyVel or not flyVel.Parent then
            flyVel = Instance.new("BodyVelocity")
            flyVel.MaxForce = Vector3.new(1e5,1e5,1e5)
            flyVel.Velocity = Vector3.new(0,0,0)
            flyVel.Parent = hrp
        end
        local dir = Vector3.new()
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then dir = dir + workspace.CurrentCamera.CFrame.LookVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then dir = dir - workspace.CurrentCamera.CFrame.LookVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then dir = dir - workspace.CurrentCamera.CFrame.RightVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then dir = dir + workspace.CurrentCamera.CFrame.RightVector end
        flyVel.Velocity = dir.Magnitude > 0.1 and dir.Unit*flySpeed or Vector3.new(0,0,0)
    else
        if flyVel and flyVel.Parent then flyVel:Destroy(); flyVel = nil end
    end
end)

-- ---------------------
-- UNIVERSAL TELEPORT & AUTO-COLLECT
-- ---------------------
local autoCollectEnabled = false
local teleportToNearestEnabled = false

createToggle(universalSec, "Auto Collect (Nearest)", false, function(enabled)
    autoCollectEnabled = enabled
end)

createToggle(universalSec, "Teleport to Nearest Pad", false, function(enabled)
    teleportToNearestEnabled = enabled
end)

local function getNearestObject()
    local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return nil end
    local candidates = {}
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("BasePart") or obj:IsA("Model") then
            local n = obj.Name:lower()
            if string.find(n,"pad") or string.find(n,"collect") or string.find(n,"drop") then
                table.insert(candidates,obj)
            end
        end
    end
    local nearest, nearestDist = nil, math.huge
    for _,c in ipairs(candidates) do
        local cf = c:IsA("Model") and c.PrimaryPart and c.PrimaryPart.CFrame or c:IsA("BasePart") and c.CFrame
        if cf then
            local dist = (cf.Position - hrp.Position).Magnitude
            if dist < nearestDist then
                nearestDist = dist
                nearest = c
            end
        end
    end
    return nearest
end

spawn(function()
    while true do
        task.wait(0.15)
        local char = player.Character
        local hrp = char and char:FindFirstChild("HumanoidRootPart")
        if hrp then
            local nearest = getNearestObject()
            if nearest then
                local targetCFrame = nearest:IsA("Model") and nearest.PrimaryPart and nearest.PrimaryPart.CFrame or nearest:IsA("BasePart") and nearest.CFrame
                if targetCFrame then
                    if teleportToNearestEnabled or autoCollectEnabled then
                        hrp.CFrame = targetCFrame + Vector3.new(0,5,0)
                    end
                end
            end
        end
    end
end)
