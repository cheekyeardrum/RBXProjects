-- Cheeky Hub V1.0 - Advanced Animated Edition (with Honey System)
-- Fully fixed and ready to paste into executor

-- Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local CoreGui = game:GetService("CoreGui")
local LocalPlayer = Players.LocalPlayer

-- Config
local THEME_ACCENT = Color3.fromRGB(0, 255, 180)
local THEME_BG = Color3.fromRGB(12, 12, 14)
local PANEL_BG = Color3.fromRGB(20, 20, 22)
local TRANS = TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

local HUB_W, HUB_H = 760, 520
local MINIMIZED = UDim2.new(0, 260, 0, 44)

-- Honey System Remotes
local HiveRemote = ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Features")
    :WaitForChild("HoneySystem"):WaitForChild("HiveUtil"):WaitForChild("RemoteEvent")
local HoneyRemote = ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Features")
    :WaitForChild("HoneySystem"):WaitForChild("HoneyUtil"):WaitForChild("RemoteEvent")
local FlowerRemote = ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Features")
    :WaitForChild("HoneySystem"):WaitForChild("FlowerUtil"):WaitForChild("RemoteFunction")

-- Helpers
local function round(ui, radius)
    local c = Instance.new("UICorner")
    c.CornerRadius = UDim.new(0, radius or 8)
    c.Parent = ui
    return c
end

local function tween(obj, props, time)
    local ti = time or TRANS
    local tw = TweenService:Create(obj, ti, props)
    tw:Play()
    return tw
end

-- Prevent duplicates
if CoreGui:FindFirstChild("CheekyHub_Gui") then
    CoreGui:FindFirstChild("CheekyHub_Gui"):Destroy()
end

-- ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CheekyHub_Gui"
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
screenGui.Parent = CoreGui

-- Main container
local main = Instance.new("Frame", screenGui)
main.Name = "Main"
main.Size = UDim2.new(0, HUB_W, 0, HUB_H)
main.Position = UDim2.new(0.5, 0, 0.5, 0)
main.AnchorPoint = Vector2.new(0.5, 0.5)
main.BackgroundColor3 = THEME_BG
main.BorderSizePixel = 0
round(main, 14)

-- Shadow/Glow
local glow = Instance.new("Frame", screenGui)
glow.Name = "Glow"
glow.Size = main.Size
glow.Position = main.Position
glow.AnchorPoint = main.AnchorPoint
glow.BackgroundColor3 = THEME_ACCENT
glow.BackgroundTransparency = 0.95
glow.ZIndex = main.ZIndex - 1
round(glow, 22)

local stroke = Instance.new("UIStroke", main)
stroke.Color = THEME_ACCENT
stroke.Thickness = 2
stroke.Transparency = 0.22
stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

-- Top bar
local topBar = Instance.new("Frame", main)
topBar.Size = UDim2.new(1, 0, 0, 48)
topBar.Position = UDim2.new(0, 0, 0, 0)
topBar.BackgroundColor3 = Color3.fromRGB(18, 18, 20)
topBar.BorderSizePixel = 0
round(topBar, 12)

local title = Instance.new("TextLabel", topBar)
title.Size = UDim2.new(0.6, -12, 1, 0)
title.Position = UDim2.new(0, 12, 0, 0)
title.BackgroundTransparency = 1
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.Text = "Cheeky Hub V1.0"
title.TextColor3 = THEME_ACCENT
title.TextXAlignment = Enum.TextXAlignment.Left

local subtitle = Instance.new("TextLabel", topBar)
subtitle.Size = UDim2.new(0.35, -12, 1, 0)
subtitle.Position = UDim2.new(0.65, 12, 0, 0)
subtitle.BackgroundTransparency = 1
subtitle.Font = Enum.Font.Gotham
subtitle.TextSize = 12
subtitle.Text = "Advanced Animated Edition"
subtitle.TextColor3 = Color3.fromRGB(200, 200, 200)
subtitle.TextXAlignment = Enum.TextXAlignment.Right

-- Minimize / Close
local btnClose = Instance.new("TextButton", topBar)
btnClose.Size = UDim2.new(0, 36, 0, 32)
btnClose.Position = UDim2.new(1, -46, 0, 8)
btnClose.Text = "‚úñ"
btnClose.Font = Enum.Font.GothamBold
btnClose.TextSize = 18
btnClose.TextColor3 = Color3.fromRGB(255,255,255)
btnClose.BackgroundColor3 = Color3.fromRGB(180,50,50)
round(btnClose,8)
btnClose.MouseButton1Click:Connect(function() screenGui:Destroy() end)

local btnMin = Instance.new("TextButton", topBar)
btnMin.Size = UDim2.new(0, 36, 0, 32)
btnMin.Position = UDim2.new(1, -92, 0, 8)
btnMin.Text = "‚Äî"
btnMin.Font = Enum.Font.GothamBold
btnMin.TextSize = 18
btnMin.TextColor3 = Color3.fromRGB(255,255,255)
btnMin.BackgroundColor3 = Color3.fromRGB(75,75,75)
round(btnMin,8)

local isMinimized = false
btnMin.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    if isMinimized then
        tween(main, {Size = MINIMIZED}, TweenInfo.new(0.28))
        tween(glow, {Size = MINIMIZED}, TweenInfo.new(0.28))
        
        -- Hide tabs & content
        leftPanel.Visible = false
        contentArea.Visible = false
    else
        tween(main, {Size = UDim2.new(0, HUB_W, 0, HUB_H)}, TweenInfo.new(0.28))
        tween(glow, {Size = UDim2.new(0, HUB_W, 0, HUB_H)}, TweenInfo.new(0.28))
        
        -- Show tabs & content
        leftPanel.Visible = true
        contentArea.Visible = true
    end
end)

-- Drag
local dragging, dragInput, dragStart, startPos = false,nil,nil,nil
topBar.InputBegan:Connect(function(input)
    if input.UserInputType==Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = main.Position
        input.Changed:Connect(function()
            if input.UserInputState==Enum.UserInputState.End then dragging=false end
        end)
    end
end)
topBar.InputChanged:Connect(function(input)
    if input.UserInputType==Enum.UserInputType.MouseMovement then dragInput=input end
end)
UserInputService.InputChanged:Connect(function(input)
    if dragging and input==dragInput then
        local delta = input.Position - dragStart
        main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        glow.Position = main.Position
    end
end)

-- Left panel / tabs
local leftPanel = Instance.new("Frame", main)
leftPanel.Size = UDim2.new(0,160,1,-60)
leftPanel.Position = UDim2.new(0,12,0,56)
leftPanel.BackgroundColor3 = PANEL_BG
leftPanel.BorderSizePixel = 0
round(leftPanel,12)

local logo = Instance.new("TextLabel", leftPanel)
logo.Size = UDim2.new(1,-24,0,80)
logo.Position = UDim2.new(0,12,0,12)
logo.BackgroundTransparency = 1
logo.Text = "üëë Cheeky"
logo.Font = Enum.Font.GothamBold
logo.TextSize = 26
logo.TextColor3 = THEME_ACCENT
logo.TextXAlignment = Enum.TextXAlignment.Left

local leftList = Instance.new("Frame", leftPanel)
leftList.Size = UDim2.new(1,-24,1,-112)
leftList.Position = UDim2.new(0,12,0,104)
leftList.BackgroundTransparency = 1
local leftLayout = Instance.new("UIListLayout", leftList)
leftLayout.SortOrder = Enum.SortOrder.LayoutOrder
leftLayout.Padding = UDim.new(0,10)

-- Content area
local contentArea = Instance.new("Frame", main)
contentArea.Size = UDim2.new(1,-200,1,-60)
contentArea.Position = UDim2.new(0,180,0,56)
contentArea.BackgroundColor3 = Color3.fromRGB(8,8,9)
round(contentArea,10)

-- Tabs
local tabs = {}
local activeTab = nil
local function createTab(name, emoji)
    local btn = Instance.new("TextButton", leftList)
    btn.Size = UDim2.new(1,0,0,44)
    btn.BackgroundColor3 = Color3.fromRGB(24,24,26)
    btn.TextColor3 = Color3.new(1,1,1)
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 16
    btn.AutoButtonColor = false
    btn.Text = (" %s   %s"):format(emoji or "‚Ä¢", name)
    round(btn,8)

    local page = Instance.new("Frame", contentArea)
    page.Size = UDim2.new(1,-24,1,0)
    page.BackgroundTransparency = 1
    page.Visible = false

    tabs[name] = {Button = btn, Page = page}
    btn.MouseButton1Click:Connect(function()
        for n,t in pairs(tabs) do
            t.Page.Visible = false
            tween(t.Button, {BackgroundColor3 = Color3.fromRGB(24,24,26)}, TRANS)
        end
        page.Visible = true
        activeTab = name
        tween(btn, {BackgroundColor3 = THEME_BG}, TRANS)
    end)
    return page
end

-- Main tabs
local playerPage = createTab("Player", "üßç")
local autoPage = createTab("Auto", "‚öôÔ∏è")
local tpPage = createTab("Teleports", "üìç")
local visualsPage = createTab("Visuals", "üé®")
local serverPage = createTab("Server", "üåê")




-- ===== Visuals Tab - Anti-Lag Mode =====

local antiLagSection = Instance.new("Frame", visualsPage)
antiLagSection.Size = UDim2.new(1, -24, 0, 50)
antiLagSection.BackgroundTransparency = 1

local antiLagBtn = Instance.new("TextButton", antiLagSection)
antiLagBtn.Size = UDim2.new(1, 0, 1, 0)
antiLagBtn.BackgroundColor3 = Color3.fromRGB(255, 100, 0)
antiLagBtn.TextColor3 = Color3.new(1, 1, 1)
antiLagBtn.Font = Enum.Font.GothamBold
antiLagBtn.TextSize = 14
antiLagBtn.Text = "Toggle Anti-Lag Mode"
antiLagBtn.AutoButtonColor = true
antiLagBtn.TextWrapped = true

local antiLagActive = false

-- Services
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")

-- Wait for Plots folder
local plotsFolder = Workspace:WaitForChild("Plots", 10)
if not plotsFolder then
    warn("‚ö†Ô∏è No 'Plots' folder found in Workspace.")
end

-- Function to get player's plot (using Owner)
local function getPlayerPlot()
    if not plotsFolder then return nil end
    for _, plot in pairs(plotsFolder:GetChildren()) do
        local owner = plot:FindFirstChild("Owner")
        if owner then
            if owner.Value == LocalPlayer or owner.Value == LocalPlayer.Name then
                return plot
            end
        end
    end
    return nil
end

-- Function to disable visual-heavy effects
local function applyAntiLag(plot)
    if not plot then return end

    for _, part in pairs(plot:GetDescendants()) do
        if part:IsA("ParticleEmitter") then
            part.Enabled = false
        elseif part:IsA("AnimationController") or part:IsA("Animator") then
            part:Destroy()
        elseif part:IsA("Accessory") then
            if part:FindFirstChild("Handle") then
                part.Handle.Transparency = 1
            end
        elseif part:IsA("Motor6D") then
            part:Destroy()
        end
    end
end

-- Button click toggle
antiLagBtn.MouseButton1Click:Connect(function()
    antiLagActive = not antiLagActive
    antiLagBtn.Text = antiLagActive and "Anti-Lag Mode: ON" or "Toggle Anti-Lag Mode"
    antiLagBtn.BackgroundColor3 = antiLagActive and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(255, 100, 0)

    if antiLagActive then
        print("‚úÖ Anti-Lag Enabled")
        local plot = getPlayerPlot()
        applyAntiLag(plot)
    else
        print("‚ùå Anti-Lag Disabled ‚Äî rejoin to restore visuals")
    end
end)

-- Continuously apply while active
RunService.Heartbeat:Connect(function()
    if antiLagActive then
        local plot = getPlayerPlot()
        applyAntiLag(plot)
    end
end)



-- ======================
-- Honey System Tab
-- ======================

local honeyPage = createTab("Honey", "üçØ")

local honeyLayout = Instance.new("UIListLayout", honeyPage)
honeyLayout.SortOrder = Enum.SortOrder.LayoutOrder
honeyLayout.Padding = UDim.new(0, 12)

-- ===== Helper: Create Button + Slider Combo =====
local function createButtonWithSlider(parent, labelText, color, min, max, default)
	local section = Instance.new("Frame", parent)
	section.Size = UDim2.new(1, -24, 0, 50)
	section.BackgroundTransparency = 1

	local btn = Instance.new("TextButton", section)
	btn.Size = UDim2.new(0.55, 0, 1, 0)
	btn.BackgroundColor3 = color
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 14
	btn.Text = labelText
	btn.AutoButtonColor = true
	round(btn, 8)

	local sliderBack = Instance.new("Frame", section)
	sliderBack.Size = UDim2.new(0.4, 0, 0.3, 0)
	sliderBack.Position = UDim2.new(0.6, 0, 0.35, 0)
	sliderBack.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
	round(sliderBack, 8)

	local fill = Instance.new("Frame", sliderBack)
	fill.BackgroundColor3 = THEME_ACCENT
	fill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
	round(fill, 8)

	local label = Instance.new("TextLabel", sliderBack)
	label.Size = UDim2.new(1, 0, 1, 0)
	label.BackgroundTransparency = 1
	label.Font = Enum.Font.Gotham
	label.TextSize = 12
	label.TextColor3 = Color3.new(1, 1, 1)
	label.Text = tostring(default) .. "s"

	local delayValue = default
	local dragging = false

	local function updateSlider(x)
		local rel = math.clamp((x - sliderBack.AbsolutePosition.X) / sliderBack.AbsoluteSize.X, 0, 1)
		fill.Size = UDim2.new(rel, 0, 1, 0)
		delayValue = math.floor(min + rel * (max - min))
		label.Text = tostring(delayValue) .. "s"
	end

	sliderBack.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			updateSlider(input.Position.X)
		end
	end)

	sliderBack.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

	sliderBack.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			updateSlider(input.Position.X)
		end
	end)

	return btn, function() return delayValue end
end

-- ===== Smart Extract =====
local smartExtractBtn, getExtractDelay = createButtonWithSlider(honeyPage, "Start Smart Extract", Color3.fromRGB(0, 200, 255), 1, 20, 5)
local smartLoopExtract = false

smartExtractBtn.MouseButton1Click:Connect(function()
	smartLoopExtract = not smartLoopExtract
	smartExtractBtn.Text = smartLoopExtract and "Stop Extract" or "Start Smart Extract"

	if smartLoopExtract then
		task.spawn(function()
			local player = game.Players.LocalPlayer
			local framework = game:GetService("ReplicatedStorage"):WaitForChild("Framework")
			local hiveRemote = framework:WaitForChild("Features"):WaitForChild("HoneySystem"):WaitForChild("HiveUtil"):WaitForChild("RemoteEvent")

			while smartLoopExtract do
				local plot = workspace:WaitForChild("Plots"):FindFirstChild(player.Name)
				if plot and plot:FindFirstChild("Hives") then
					local builtHives = {}
					for _, hive in pairs(plot.Hives:GetChildren()) do
						if hive:GetAttribute("IsBuilt") then
							table.insert(builtHives, hive)
						end
					end
					if #builtHives > 0 then
						pcall(function()
							hiveRemote:FireServer("ExtractHoney", builtHives)
						end)
					end
				end
				task.wait(getExtractDelay())
			end
		end)
	end
end)

-- ===== Buy All Flowers =====
local buyBtn, getBuyDelay = createButtonWithSlider(honeyPage, "Buy All Flowers", Color3.fromRGB(255, 170, 0), 1, 20, 5)
local loopBuy = false

buyBtn.MouseButton1Click:Connect(function()
	loopBuy = not loopBuy
	buyBtn.Text = loopBuy and "Stop Buying" or "Buy All Flowers"

	if loopBuy then
		task.spawn(function()
			local FlowerRemote = game:GetService("ReplicatedStorage")
				:WaitForChild("Framework"):WaitForChild("Features")
				:WaitForChild("HoneySystem"):WaitForChild("FlowerUtil")
				:WaitForChild("RemoteEvent")

			local flowerList = {
				"AquilegiaCoerulea", "Bamboo", "Bluebell", "Cactus", "Clover",
				"Dahlia", "Daisy", "FireBlossom", "KniphofiaUvaria", "Lavender",
				"Lily", "MorningGlory", "RedRose", "Sunflower", "Tulip",
				"VenusFlyTrap",
			}

			while loopBuy do
				for _, flowerName in ipairs(flowerList) do
					pcall(function()
						FlowerRemote:FireServer("BuyFlower", flowerName)
					end)
					task.wait(0.1)
				end
				task.wait(getBuyDelay())
			end
		end)
	end
end)

-- ===== Sell Honey =====
local sellBtn, getSellDelay = createButtonWithSlider(honeyPage, "Start Sell", Color3.fromRGB(0, 255, 127), 1, 20, 5)
local loopSell = false

sellBtn.MouseButton1Click:Connect(function()
	loopSell = not loopSell
	sellBtn.Text = loopSell and "Stop Sell" or "Start Sell"

	if loopSell then
		task.spawn(function()
			local HoneyRemote = game:GetService("ReplicatedStorage")
				:WaitForChild("Framework"):WaitForChild("Features")
				:WaitForChild("HoneySystem"):WaitForChild("HoneyUtil")
				:WaitForChild("RemoteEvent")

			while loopSell do
				pcall(function()
					HoneyRemote:FireServer("SellHoney", "Honey")
				end)
				task.wait(getSellDelay())
			end
		end)
	end
end)

print("‚úÖ Cheeky Hub V1.0 - Updated Honey Tab with Delay Sliders Loaded")

