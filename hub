-- Clean Hub (GUI Framework + Grass/Tree/Cutting Tabs)

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")

local player = Players.LocalPlayer
local guiParent = CoreGui

-- Sizes
local HUB_SZ = UDim2.new(0,700,0,450)
local MINIMIZED_SZ = UDim2.new(0,200,0,40)

-- Tween helper
local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local function tween(obj, props)
    local tw = TweenService:Create(obj, tweenInfo, props)
    tw:Play()
    return tw
end

local function round(ui, radius)
    local c = Instance.new("UICorner", ui)
    c.CornerRadius = UDim.new(0, radius or 8)
end

-- ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CleanHubGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = guiParent

-- Main Frame
local frame = Instance.new("Frame", screenGui)
frame.Name = "MainFrame"
frame.Size = HUB_SZ
frame.Position = UDim2.new(0.5,0,0.5,0)
frame.AnchorPoint = Vector2.new(0.5,0.5)
frame.BackgroundColor3 = Color3.fromRGB(20,20,20)
frame.Active = true
frame.BorderSizePixel = 0
round(frame,10)

-- Dragging
local dragging, dragInput, dragStart, startPos
UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(
            startPos.X.Scale, startPos.X.Offset+delta.X,
            startPos.Y.Scale, startPos.Y.Offset+delta.Y
        )
    end
end)

local function enableDrag(target)
    target.InputBegan:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.MouseButton1 or i.UserInputType==Enum.UserInputType.Touch then
            dragging = true
            dragStart = i.Position
            startPos = frame.Position
            i.Changed:Connect(function()
                if i.UserInputState==Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    target.InputChanged:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.MouseMovement or i.UserInputType==Enum.UserInputType.Touch then
            dragInput = i
        end
    end)
end

-- Top Bar
local bar=Instance.new("Frame",frame)
bar.Size=UDim2.new(1,0,0,40)
bar.Position=UDim2.new(0,0,0,0)
bar.BackgroundColor3=Color3.fromRGB(40,40,40)
bar.Active=true
round(bar,10)
enableDrag(bar)

local title=Instance.new("TextLabel",bar)
title.Size=UDim2.new(1,-120,1,0)
title.Position = UDim2.new(0,10,0,0)
title.BackgroundTransparency=1
title.Font=Enum.Font.SourceSansBold
title.TextSize=24
title.Text="Clean Hub"
title.TextColor3 = Color3.new(1,1,1)
title.TextXAlignment=Enum.TextXAlignment.Left

local closeBtn=Instance.new("TextButton",bar)
closeBtn.Size=UDim2.new(0,30,0,30)
closeBtn.Position=UDim2.new(1,-40,0,5)
closeBtn.Text="X"
closeBtn.Font=Enum.Font.SourceSansBold
closeBtn.TextSize=18
closeBtn.BackgroundColor3=Color3.fromRGB(200,50,50)
closeBtn.TextColor3=Color3.new(1,1,1)
round(closeBtn,4)

local minBtn=Instance.new("TextButton",bar)
minBtn.Size=UDim2.new(0,30,0,30)
minBtn.Position=UDim2.new(1,-80,0,5)
minBtn.Text="-"
minBtn.Font=Enum.Font.SourceSansBold
minBtn.TextSize=22
minBtn.BackgroundColor3=Color3.fromRGB(100,100,100)
minBtn.TextColor3=Color3.new(1,1,1)
round(minBtn,4)

-- Tabs + Content
local tabsFrame=Instance.new("Frame",frame)
tabsFrame.Size=UDim2.new(0,160,1,-60)
tabsFrame.Position=UDim2.new(0,0,0,50)
tabsFrame.BackgroundTransparency=1

local contentFrame=Instance.new("Frame",frame)
contentFrame.Size=UDim2.new(1,-160,1,-60)
contentFrame.Position=UDim2.new(0,160,0,50)
contentFrame.BackgroundTransparency=1
enableDrag(contentFrame)

---------------------------------------------------
-- Grass Upgrade Tab
---------------------------------------------------
local grassUpgrade = false
local grassConn

local function fireGrassUpgrades()
    local args1 = { buffer.fromstring("\002\n\000SpawnRate1\000\001\0001\001\0007\005\000Grass\001\0005") }
    game:GetService("ReplicatedStorage"):WaitForChild("ByteNetReliable"):FireServer(unpack(args1))

    local args2 = { buffer.fromstring("\002\n\000GrassValue\000\001\0001\002\00099\005\000Grass\001\0002") }
    game:GetService("ReplicatedStorage"):WaitForChild("ByteNetReliable"):FireServer(unpack(args2))

    local args3 = { buffer.fromstring("\002\v\000GrassAmount\000\001\0001\002\00049\005\000Grass\001\0003") }
    game:GetService("ReplicatedStorage"):WaitForChild("ByteNetReliable"):FireServer(unpack(args3))
end

local function buildGrassUpgradeTab()
    for _,v in pairs(contentFrame:GetChildren()) do v:Destroy() end
    local label = Instance.new("TextLabel", contentFrame)
    label.Size = UDim2.new(1,-20,0,40)
    label.Position = UDim2.new(0,10,0,10)
    label.BackgroundTransparency = 1
    label.Text = "Grass Upgrade"
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.SourceSansBold
    label.TextSize = 22

    local toggle = Instance.new("TextButton", contentFrame)
    toggle.Size = UDim2.new(0,200,0,50)
    toggle.Position = UDim2.new(0,20,0,60)
    toggle.Text = "OFF"
    toggle.Font = Enum.Font.SourceSansBold
    toggle.TextSize = 20
    toggle.BackgroundColor3 = Color3.fromRGB(150,50,50)
    toggle.TextColor3 = Color3.new(1,1,1)
    round(toggle,8)

    toggle.MouseButton1Click:Connect(function()
        grassUpgrade = not grassUpgrade
        toggle.Text = grassUpgrade and "ON" or "OFF"
        toggle.BackgroundColor3 = grassUpgrade and Color3.fromRGB(50,150,50) or Color3.fromRGB(150,50,50)

        if grassUpgrade then
            grassConn = RunService.RenderStepped:Connect(fireGrassUpgrades)
        else
            if grassConn then
                grassConn:Disconnect()
                grassConn = nil
            end
        end
    end)
end

---------------------------------------------------
-- Tree Upgrade Tab (TreeUpgrades1 = 20, TreeUpgrades2 = 30)
---------------------------------------------------
local treeUpgrade = false
local treeLoop

local function fireTreeUpgrades()
    local char = player.Character or player.CharacterAdded:Wait()
    local hrp = char:WaitForChild("HumanoidRootPart")

    -- TreeUpgrades1 (20 upgrades)
    local folder1 = workspace.World.Scriptable:FindFirstChild("TreeUpgrades1")
    if folder1 then
        for i = 1, 20 do
            local upgrade = folder1:FindFirstChild("TreeUpgrade"..i)
            if upgrade then
                local pad = upgrade:FindFirstChild("Pad")
                if pad and pad:FindFirstChild("Main") then
                    local part = pad.Main
                    firetouchinterest(hrp, part, 0)
                    firetouchinterest(hrp, part, 1)
                end
            end
        end
    end

    -- TreeUpgrades2 (30 upgrades)
    local folder2 = workspace.World.Scriptable:FindFirstChild("TreeUpgrades2")
    if folder2 then
        for i = 1, 30 do
            local upgrade = folder2:FindFirstChild("TreeUpgrade"..i)
            if upgrade then
                local pad = upgrade:FindFirstChild("Pad")
                if pad and pad:FindFirstChild("Main") then
                    local part = pad.Main
                    firetouchinterest(hrp, part, 0)
                    firetouchinterest(hrp, part, 1)
                end
            end
        end
    end
end

local function buildTreeUpgradeTab()
    for _,v in pairs(contentFrame:GetChildren()) do v:Destroy() end

    local label = Instance.new("TextLabel", contentFrame)
    label.Size = UDim2.new(1,-20,0,40)
    label.Position = UDim2.new(0,10,0,10)
    label.BackgroundTransparency = 1
    label.Text = "Tree Upgrade"
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.SourceSansBold
    label.TextSize = 22

    local toggle = Instance.new("TextButton", contentFrame)
    toggle.Size = UDim2.new(0,200,0,50)
    toggle.Position = UDim2.new(0,20,0,60)
    toggle.Text = "OFF"
    toggle.Font = Enum.Font.SourceSansBold
    toggle.TextSize = 20
    toggle.BackgroundColor3 = Color3.fromRGB(150,50,50)
    toggle.TextColor3 = Color3.new(1,1,1)
    round(toggle,8)

    toggle.MouseButton1Click:Connect(function()
        treeUpgrade = not treeUpgrade
        toggle.Text = treeUpgrade and "ON" or "OFF"
        toggle.BackgroundColor3 = treeUpgrade and Color3.fromRGB(50,150,50) or Color3.fromRGB(150,50,50)

        if treeUpgrade then
            treeLoop = task.spawn(function()
                while treeUpgrade do
                    fireTreeUpgrades()
                    task.wait(0.5)
                end
            end)
        end
    end)
end

---------------------------------------------------
-- Cutting Grass Tab
---------------------------------------------------
local cutting = false
local cutLoop

local function fireCutGrass()
    local args1 = {buffer.fromstring("\014\007\000Diamond\014\006\000Normal")}
    game:GetService("ReplicatedStorage"):WaitForChild("ByteNetReliable"):FireServer(unpack(args1))

    local args2 = {buffer.fromstring("\014\004\000Ruby")}
    game:GetService("ReplicatedStorage"):WaitForChild("ByteNetReliable"):FireServer(unpack(args2))
end

local function buildCuttingGrassTab()
    for _,v in pairs(contentFrame:GetChildren()) do v:Destroy() end
    local label = Instance.new("TextLabel", contentFrame)
    label.Size = UDim2.new(1,-20,0,40)
    label.Position = UDim2.new(0,10,0,10)
    label.BackgroundTransparency = 1
    label.Text = "Cutting Grass"
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.SourceSansBold
    label.TextSize = 22

    local toggle = Instance.new("TextButton", contentFrame)
    toggle.Size = UDim2.new(0,200,0,50)
    toggle.Position = UDim2.new(0,20,0,60)
    toggle.Text = "OFF"
    toggle.Font = Enum.Font.SourceSansBold
    toggle.TextSize = 20
    toggle.BackgroundColor3 = Color3.fromRGB(150,50,50)
    toggle.TextColor3 = Color3.new(1,1,1)
    round(toggle,8)

    toggle.MouseButton1Click:Connect(function()
        cutting = not cutting
        toggle.Text = cutting and "ON" or "OFF"
        toggle.BackgroundColor3 = cutting and Color3.fromRGB(50,150,50) or Color3.fromRGB(150,50,50)

        if cutting then
            cutLoop = task.spawn(function()
                while cutting do
                    fireCutGrass()
                    task.wait(0.01)
                end
            end)
        end
    end)
end

---------------------------------------------------
-- Tab Buttons
---------------------------------------------------
local tabNames = {"Grass Upgrade","Tree Upgrade","Cutting Grass"}
local tabFuncs = {buildGrassUpgradeTab,buildTreeUpgradeTab,buildCuttingGrassTab}
local tabButtons = {}

for i,name in ipairs(tabNames) do
    local btn = Instance.new("TextButton", tabsFrame)
    btn.Size = UDim2.new(1,0,0,40)
    btn.Position = UDim2.new(0,0,0,(i-1)*45)
    btn.Text = name
    btn.Font = Enum.Font.SourceSansBold
    btn.TextSize = 16
    btn.BackgroundColor3 = Color3.fromRGB(50,50,50)
    btn.TextColor3 = Color3.new(1,1,1)
    round(btn,6)
    local func = tabFuncs[i]
    btn.MouseButton1Click:Connect(func)
    table.insert(tabButtons, btn)
end

-- Close/Minimize
closeBtn.MouseButton1Click:Connect(function() screenGui:Destroy() end)
minBtn.MouseButton1Click:Connect(function()
    if frame.Size==HUB_SZ then
        tween(frame,{Size=MINIMIZED_SZ})
    else
        tween(frame,{Size=HUB_SZ})
    end
end)

-- Default tab
buildGrassUpgradeTab()
