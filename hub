-- Clean Hub with Buy/Sell/Teleport/Find Items Tabs
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer
local guiParent = CoreGui

-- Sizes
local CLOSED_SZ = UDim2.new(0,1,0,1)
local HUB_SZ = UDim2.new(0,700,0,450)
local MINIMIZED_SZ = UDim2.new(0,200,0,40)

-- Tween helper
local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local function tween(obj, props)
    local tw = TweenService:Create(obj, tweenInfo, props)
    tw:Play()
    return tw
end

local function round(ui, radius)
    local c = Instance.new("UICorner", ui)
    c.CornerRadius = UDim.new(0, radius or 8)
end

-- ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CleanHubGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = guiParent

-- Main Frame
local frame = Instance.new("Frame", screenGui)
frame.Name = "MainFrame"
frame.Size = HUB_SZ
frame.Position = UDim2.new(0.5,0,0.5,0)
frame.AnchorPoint = Vector2.new(0.5,0.5)
frame.BackgroundColor3 = Color3.fromRGB(20,20,20)
frame.Active = true
frame.BorderSizePixel = 0
round(frame,10)

-- Dragging
local dragging, dragInput, dragStart, startPos
UserInputService.InputChanged:Connect(function(input)
    if input==dragInput and dragging then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(
            startPos.X.Scale, startPos.X.Offset+delta.X,
            startPos.Y.Scale, startPos.Y.Offset+delta.Y
        )
    end
end)

local function enableDrag(target)
    target.InputBegan:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.MouseButton1 or i.UserInputType==Enum.UserInputType.Touch then
            dragging = true
            dragStart = i.Position
            startPos = frame.Position
            i.Changed:Connect(function()
                if i.UserInputState==Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    target.InputChanged:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.MouseMovement or i.UserInputType==Enum.UserInputType.Touch then
            dragInput = i
        end
    end)
end

-- Top Bar
local bar=Instance.new("Frame",frame)
bar.Size=UDim2.new(1,0,0,40)
bar.Position=UDim2.new(0,0,0,0)
bar.BackgroundColor3=Color3.fromRGB(40,40,40)
bar.Active=true
round(bar,10)
enableDrag(bar)

local title=Instance.new("TextLabel",bar)
title.Size=UDim2.new(1,-120,1,0)
title.Position=UDim2.new(0,10,0,0)
title.BackgroundTransparency=1
title.Font=Enum.Font.SourceSansBold
title.TextSize=24
title.Text="Clean Hub"
title.TextColor3=Color3.new(1,1,1)
title.TextXAlignment=Enum.TextXAlignment.Left

local closeBtn=Instance.new("TextButton",bar)
closeBtn.Size=UDim2.new(0,30,0,30)
closeBtn.Position=UDim2.new(1,-40,0,5)
closeBtn.Text="X"
closeBtn.Font=Enum.Font.SourceSansBold
closeBtn.TextSize=18
closeBtn.BackgroundColor3=Color3.fromRGB(200,50,50)
closeBtn.TextColor3=Color3.new(1,1,1)
round(closeBtn,4)

local minBtn=Instance.new("TextButton",bar)
minBtn.Size=UDim2.new(0,30,0,30)
minBtn.Position=UDim2.new(1,-80,0,5)
minBtn.Text="-"
minBtn.Font=Enum.Font.SourceSansBold
minBtn.TextSize=22
minBtn.BackgroundColor3=Color3.fromRGB(100,100,100)
minBtn.TextColor3=Color3.new(1,1,1)
round(minBtn,4)

-- Tabs + Content
local tabsFrame=Instance.new("Frame",frame)
tabsFrame.Size=UDim2.new(0,140,1,-60)
tabsFrame.Position=UDim2.new(0,0,0,50)
tabsFrame.BackgroundTransparency=1

local contentFrame=Instance.new("Frame",frame)
contentFrame.Size=UDim2.new(1,-140,1,-60)
contentFrame.Position=UDim2.new(0,140,0,50)
contentFrame.BackgroundTransparency=1
enableDrag(contentFrame)

local tabNames={"Buy","Sell","Teleport","Find Items"}
local tabButtons={}

-- Buy Tab Builder
local function buildBuyTab()
    for _,v in pairs(contentFrame:GetChildren()) do v:Destroy() end

    local label = Instance.new("TextLabel", contentFrame)
    label.Size = UDim2.new(0.6, -10, 0, 30)
    label.Position = UDim2.new(0, 10, 0, 10)
    label.BackgroundTransparency = 1
    label.Text = "Auto-Buy Packs"
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.SourceSansBold
    label.TextSize = 18
    label.TextXAlignment = Enum.TextXAlignment.Left

    local buyBtn = Instance.new("TextButton", contentFrame)
    buyBtn.Size = UDim2.new(0.35, 0, 0, 30)
    buyBtn.Position = UDim2.new(0.65, 0, 0, 10)
    buyBtn.Text = "OFF"
    buyBtn.Font = Enum.Font.SourceSansBold
    buyBtn.TextSize = 18
    buyBtn.BackgroundColor3 = Color3.fromRGB(88,101,242)
    buyBtn.TextColor3 = Color3.new(1,1,1)
    round(buyBtn, 6)

    local toggle = false
    buyBtn.MouseButton1Click:Connect(function()
        toggle = not toggle
        buyBtn.Text = toggle and "ON" or "OFF"
    end)

    -- Auto-buy Loop
    task.spawn(function()
        local brks = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("InfoFunction")
        local packs = {
            "Starter Pack","Electric Pack","Twins Pack","Blood Pack",
            "Toxic Pack","Circuit Pack","Grass Pack","Rock Pack",
            "Waterfall Pack","Volcano Pack"
        }
        local tools = {"BuyPSATool 6","BuyPSATool 7"}

        while true do
            if toggle then
                for _,v in ipairs(packs) do
                    for i=1,20 do
                        pcall(function() brks:InvokeServer("BuyBoosterPack",v) end)
                        task.wait(0.05)
                    end
                end
                for _,v in ipairs(tools) do
                    for i=1,20 do
                        pcall(function() brks:InvokeServer(v) end)
                        task.wait(0.05)
                    end
                end
                task.wait(300)
            else
                task.wait(1)
            end
        end
    end)
end

-- Placeholder Sell Tab
local function buildSellTab()
    for _,v in pairs(contentFrame:GetChildren()) do v:Destroy() end
    local label = Instance.new("TextLabel", contentFrame)
    label.Size = UDim2.new(1,-20,0,30)
    label.Position = UDim2.new(0,10,0,10)
    label.BackgroundTransparency = 1
    label.Text = "Sell tab content goes here"
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.SourceSansBold
    label.TextSize = 18
end

-- Placeholder Teleport Tab
local function buildTeleportTab()
    for _,v in pairs(contentFrame:GetChildren()) do v:Destroy() end
    local label = Instance.new("TextLabel", contentFrame)
    label.Size = UDim2.new(1,-20,0,30)
    label.Position = UDim2.new(0,10,0,10)
    label.BackgroundTransparency = 1
    label.Text = "Teleport tab content goes here"
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.SourceSansBold
    label.TextSize = 18
end

-- New: Find Items Tab
local function buildFindItemsTab()
    for _,v in pairs(contentFrame:GetChildren()) do v:Destroy() end

    local header = Instance.new("TextLabel", contentFrame)
    header.Size = UDim2.new(1,-20,0,30)
    header.Position = UDim2.new(0,10,0,10)
    header.BackgroundTransparency = 1
    header.Text = "Buyable Items:"
    header.TextColor3 = Color3.new(1,1,1)
    header.Font = Enum.Font.SourceSansBold
    header.TextSize = 18
    header.TextXAlignment = Enum.TextXAlignment.Left

    local yOffset = 50
    local foundItems = {}

    local remotesFolder = ReplicatedStorage:FindFirstChild("Remotes")
    if remotesFolder then
        for _, remote in pairs(remotesFolder:GetChildren()) do
            if remote:IsA("RemoteFunction") then
                local argsList = { "GetBoosterPacks", "GetUpgrades", "GetItems" }
                for _, arg in ipairs(argsList) do
                    local success, items = pcall(function()
                        return remote:InvokeServer(arg)
                    end)
                    if success and type(items) == "table" then
                        for _, item in ipairs(items) do
                            table.insert(foundItems, tostring(item))
                        end
                    end
                end
            end
        end
    end

    if #foundItems == 0 then
        local noneLabel = Instance.new("TextLabel", contentFrame)
        noneLabel.Size = UDim2.new(1,-20,0,30)
        noneLabel.Position = UDim2.new(0,10,0,50)
        noneLabel.BackgroundTransparency = 1
        noneLabel.Text = "No buyable items found."
        noneLabel.TextColor3 = Color3.new(1,0,0)
        noneLabel.Font = Enum.Font.SourceSansBold
        noneLabel.TextSize = 18
    else
        for _, name in ipairs(foundItems) do
            local itemLabel = Instance.new("TextLabel", contentFrame)
            itemLabel.Size = UDim2.new(1,-20,0,25)
            itemLabel.Position = UDim2.new(0,10,0,yOffset)
            itemLabel.BackgroundTransparency = 1
            itemLabel.Text = name
            itemLabel.TextColor3 = Color3.new(1,1,1)
            itemLabel.Font = Enum.Font.SourceSans
            itemLabel.TextSize = 16
            itemLabel.TextXAlignment = Enum.TextXAlignment.Left
            yOffset += 30
        end
    end
end
-- Tab Switch
local function selectTab(idx)
    for i,btn in ipairs(tabButtons) do
        btn.BackgroundColor3 = (i==idx) and Color3.fromRGB(80,80,80) or Color3.fromRGB(50,50,50)
    end

    if idx == 1 then
        buildBuyTab()
    elseif idx == 2 then
        buildSellTab()
    elseif idx == 3 then
        buildTeleportTab()
    elseif idx == 4 then
        buildFindItemsTab()
    end
end

-- Create Tab Buttons
for i,name in ipairs(tabNames) do
    local btn = Instance.new("TextButton", tabsFrame)
    btn.Size = UDim2.new(1,0,0,40)
    btn.Position = UDim2.new(0,0,0,(i-1)*45)
    btn.Text = name
    btn.Font = Enum.Font.SourceSansBold
    btn.TextSize = 20
    round(btn,6)
    btn.BackgroundColor3 = (i==1 and Color3.fromRGB(80,80,80) or Color3.fromRGB(50,50,50))
    btn.TextColor3 = Color3.new(1,1,1)
    btn.MouseButton1Click:Connect(function() selectTab(i) end)
    table.insert(tabButtons, btn)
end

-- Select first tab
selectTab(1)

-- Close + Minimize
local minimized=false
minBtn.MouseButton1Click:Connect(function()
    minimized = not minimized
    tween(frame,{Size=(minimized and MINIMIZED_SZ or HUB_SZ)})
    tabsFrame.Visible = not minimized
    contentFrame.Visible = not minimized
end)
closeBtn.MouseButton1Click:Connect(function()
    tween(frame,{Size=CLOSED_SZ}).Completed:Wait()
    screenGui:Destroy()
end)
