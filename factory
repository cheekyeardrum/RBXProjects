-- Clean Hub (AutoBuy Stock + AutoCollect Only)

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer
local guiParent = CoreGui

-- Sizes
local HUB_SZ = UDim2.new(0,700,0,450)
local MINIMIZED_SZ = UDim2.new(0,200,0,40)

-- Tween helper
local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local function tween(obj, props)
    local tw = TweenService:Create(obj, tweenInfo, props)
    tw:Play()
    return tw
end

local function round(ui, radius)
    local c = Instance.new("UICorner", ui)
    c.CornerRadius = UDim.new(0, radius or 8)
end

-- ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CleanHubGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = guiParent

-- Main Frame
local frame = Instance.new("Frame", screenGui)
frame.Name = "MainFrame"
frame.Size = HUB_SZ
frame.Position = UDim2.new(0.5,0,0.5,0)
frame.AnchorPoint = Vector2.new(0.5,0.5)
frame.BackgroundColor3 = Color3.fromRGB(20,20,20)
frame.Active = true
frame.BorderSizePixel = 0
round(frame,10)

-- Dragging
local dragging, dragInput, dragStart, startPos
UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(
            startPos.X.Scale, startPos.X.Offset+delta.X,
            startPos.Y.Scale, startPos.Y.Offset+delta.Y
        )
    end
end)
local function enableDrag(target)
    target.InputBegan:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.MouseButton1 or i.UserInputType==Enum.UserInputType.Touch then
            dragging = true
            dragStart = i.Position
            startPos = frame.Position
            i.Changed:Connect(function()
                if i.UserInputState==Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    target.InputChanged:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.MouseMovement or i.UserInputType==Enum.UserInputType.Touch then
            dragInput = i
        end
    end)
end

-- Top Bar
local bar=Instance.new("Frame",frame)
bar.Size=UDim2.new(1,0,0,40)
bar.Position=UDim2.new(0,0,0,0)
bar.BackgroundColor3=Color3.fromRGB(40,40,40)
bar.Active=true
round(bar,10)
enableDrag(bar)

local title=Instance.new("TextLabel",bar)
title.Size=UDim2.new(1,-120,1,0)
title.Position = UDim2.new(0,10,0,0)
title.BackgroundTransparency=1
title.Font=Enum.Font.SourceSansBold
title.TextSize=24
title.Text="Clean Hub"
title.TextColor3=Color3.new(1,1,1)
title.TextXAlignment=Enum.TextXAlignment.Left

local closeBtn=Instance.new("TextButton",bar)
closeBtn.Size=UDim2.new(0,30,0,30)
closeBtn.Position=UDim2.new(1,-40,0,5)
closeBtn.Text="X"
closeBtn.Font=Enum.Font.SourceSansBold
closeBtn.TextSize=18
closeBtn.BackgroundColor3=Color3.fromRGB(200,50,50)
closeBtn.TextColor3=Color3.new(1,1,1)
round(closeBtn,4)

local minBtn=Instance.new("TextButton",bar)
minBtn.Size=UDim2.new(0,30,0,30)
minBtn.Position=UDim2.new(1,-80,0,5)
minBtn.Text="-"
minBtn.Font=Enum.Font.SourceSansBold
minBtn.TextSize=22
minBtn.BackgroundColor3=Color3.fromRGB(100,100,100)
minBtn.TextColor3=Color3.new(1,1,1)
round(minBtn,4)

-- Tabs + Content
local tabsFrame=Instance.new("Frame",frame)
tabsFrame.Size=UDim2.new(0,140,1,-60)
tabsFrame.Position=UDim2.new(0,0,0,50)
tabsFrame.BackgroundTransparency=1

local contentFrame=Instance.new("Frame",frame)
contentFrame.Size=UDim2.new(1,-140,1,-60)
contentFrame.Position=UDim2.new(0,140,0,50)
contentFrame.BackgroundTransparency=1
enableDrag(contentFrame)

-- ================= AutoBuy Stock Tab =================
local function buildAutoBuyStockTab()
    for _, v in pairs(contentFrame:GetChildren()) do
        v:Destroy()
    end

    local label = Instance.new("TextLabel", contentFrame)
    label.Size = UDim2.new(1, -20, 0, 40)
    label.Position = UDim2.new(0, 10, 0, 10)
    label.BackgroundTransparency = 1
    label.Text = "Auto Buy Stock Items"
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.SourceSansBold
    label.TextSize = 22

    local scrollFrame = Instance.new("ScrollingFrame", contentFrame)
    scrollFrame.Size = UDim2.new(1, -20, 1, -60)
    scrollFrame.Position = UDim2.new(0, 10, 0, 60)
    scrollFrame.CanvasSize = UDim2.new(0,0,0,0)
    scrollFrame.ScrollBarThickness = 10
    scrollFrame.BackgroundTransparency = 1
    scrollFrame.BorderSizePixel = 0

    local uiListLayout = Instance.new("UIListLayout", scrollFrame)
    uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    uiListLayout.Padding = UDim.new(0, 10)

    local toggles = {}
    local stockItems = {
        "Basic Collector","Basic Conveyor","Basic Machine","Basic Upgrader",
        "Better Machine","Better Upgrader","Doubler Collector","Heavenly Machine",
        "Heavenly Upgrader","Slide Conveyor","Speedy Conveyor","Split Conveyor",
        "Stair Conveyor","Super Collector","Super Conveyor","Super Machine","Super Upgrader"
    }

    for _, itemName in ipairs(stockItems) do
        local container = Instance.new("Frame", scrollFrame)
        container.Size = UDim2.new(1, 0, 0, 50)
        container.BackgroundTransparency = 1

        local lbl = Instance.new("TextLabel", container)
        lbl.Size = UDim2.new(0.6, 0, 1, 0)
        lbl.Position = UDim2.new(0, 0, 0, 0)
        lbl.BackgroundTransparency = 1
        lbl.Text = itemName
        lbl.TextColor3 = Color3.new(1,1,1)
        lbl.Font = Enum.Font.SourceSansBold
        lbl.TextSize = 18
        lbl.TextXAlignment = Enum.TextXAlignment.Left

        local toggle = Instance.new("TextButton", container)
        toggle.Size = UDim2.new(0.38, 0, 1, 0)
        toggle.Position = UDim2.new(0.62, 0, 0, 0)
        toggle.Text = "OFF"
        toggle.Font = Enum.Font.SourceSansBold
        toggle.TextSize = 18
        toggle.BackgroundColor3 = Color3.fromRGB(150,50,50)
        toggle.TextColor3 = Color3.new(1,1,1)
        round(toggle,6)

        toggles[itemName] = false

        toggle.MouseButton1Click:Connect(function()
            toggles[itemName] = not toggles[itemName]
            toggle.Text = toggles[itemName] and "ON" or "OFF"
            toggle.BackgroundColor3 = toggles[itemName] and Color3.fromRGB(50,150,50) or Color3.fromRGB(150,50,50)
        end)
    end

    task.wait(0.1)
    scrollFrame.CanvasSize = UDim2.new(0,0,0,uiListLayout.AbsoluteContentSize.Y)

    task.spawn(function()
        while true do
            for itemName, enabled in pairs(toggles) do
                if enabled then
                    local stock = player.ShopInfo.StockInfo[itemName]
                    if stock and stock.Value > 0 then
                        pcall(function()
                            ReplicatedStorage.Remotes.Game.PurchaseItem:FireServer(itemName)
                        end)
                        task.wait(0.05)
                    end
                end
            end
            task.wait(2)
        end
    end)
end

---------------------------------------------------
-- AutoCollect Tab (Collect Only When Full)
---------------------------------------------------
local collecting = false
local collectThread

-- Mapping collector names to max money
local collectorMax = {
    ["Basic Collector"] = 1000,
    ["Doubler Collector"] = 50000,
    ["Super Collector"] = 500000,
    ["Infinite Collector"] = math.huge,
}

-- Function to get your tycoon
local function getMyTycoon()
    local tycoonsFolder = workspace:WaitForChild("cheekyeardrumFactory") -- change if your tycoons folder is different
    local playerName = game.Players.LocalPlayer.Name
    for _, tycoon in ipairs(tycoonsFolder:GetChildren()) do
        local owner = tycoon:FindFirstChild("Owner")
        if owner and owner.Value == playerName then
            return tycoon
        end
    end
    return nil
end

-- Function to collect from collectors when full
local function collectFromMyTycoon()
    local myTycoon = getMyTycoon()
    if not myTycoon then return end
    local character = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
    local hrp = character:WaitForChild("HumanoidRootPart")

    local collectorsFolder = myTycoon:FindFirstChild("Collectors")
    if collectorsFolder then
        for _, collector in ipairs(collectorsFolder:GetChildren()) do
            local prompt = collector:FindFirstChild("CollectPrompt")
            local holdingValue = collector:FindFirstChild("holdingValue")
            if prompt and holdingValue then
                local maxHold = collectorMax[collector.Name] or 1000
                if holdingValue.Value >= maxHold then
                    fireproximityprompt(prompt)
                    task.wait(0.1)
                end
            end
        end
    end
end

-- Build the AutoCollect Tab UI
local function buildAutoCollectTab()
    for _,v in pairs(contentFrame:GetChildren()) do v:Destroy() end

    local label = Instance.new("TextLabel", contentFrame)
    label.Size = UDim2.new(1,-20,0,40)
    label.Position = UDim2.new(0,10,0,10)
    label.BackgroundTransparency = 1
    label.Text = "Auto Collect Money (Only When Full)"
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.SourceSansBold
    label.TextSize = 22

    local toggle = Instance.new("TextButton", contentFrame)
    toggle.Size = UDim2.new(0,200,0,50)
    toggle.Position = UDim2.new(0,20,0,60)
    toggle.Text = collecting and "ON" or "OFF"
    toggle.Font = Enum.Font.SourceSansBold
    toggle.TextSize = 20
    toggle.BackgroundColor3 = collecting and Color3.fromRGB(50,150,50) or Color3.fromRGB(150,50,50)
    toggle.TextColor3 = Color3.new(1,1,1)
    round(toggle,8)

    toggle.MouseButton1Click:Connect(function()
        collecting = not collecting
        toggle.Text = collecting and "ON" or "OFF"
        toggle.BackgroundColor3 = collecting and Color3.fromRGB(50,150,50) or Color3.fromRGB(150,50,50)

        if collecting then
            collectThread = task.spawn(function()
                while collecting do
                    collectFromMyTycoon()
                    task.wait(0.5) -- check every half-second
                end
            end)
        else
            if collectThread then
                task.cancel(collectThread)
                collectThread = nil
            end
        end
    end)
end

-- Tabs
local tabNames = {"AutoBuy Stock", "AutoCollect"}
local tabFuncs = {buildAutoBuyStockTab, buildAutoCollectTab}

for i,name in ipairs(tabNames) do
    local btn = Instance.new("TextButton", tabsFrame)
    btn.Size = UDim2.new(1,0,0,40)
    btn.Position = UDim2.new(0,0,0,(i-1)*45)
    btn.Text = name
    btn.Font = Enum.Font.SourceSansBold
    btn.TextSize = 16
    btn.BackgroundColor3 = Color3.fromRGB(50,50,50)
    btn.TextColor3 = Color3.new(1,1,1)
    round(btn,6)
    btn.MouseButton1Click:Connect(tabFuncs[i])
end

-- Close/Minimize
closeBtn.MouseButton1Click:Connect(function() screenGui:Destroy() end)
minBtn.MouseButton1Click:Connect(function()
    if frame.Size==HUB_SZ then
        tween(frame,{Size=MINIMIZED_SZ})
    else
        tween(frame,{Size=HUB_SZ})
    end
end)

-- Default tab
buildAutoBuyStockTab()
