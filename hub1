-- Clean Hub (GUI with persistent toggles)

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local guiParent = CoreGui

-- Sizes
local HUB_SZ = UDim2.new(0,700,0,450)
local MINIMIZED_SZ = UDim2.new(0,200,0,40)

-- Tween helper
local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local function tween(obj, props)
    local tw = TweenService:Create(obj, tweenInfo, props)
    tw:Play()
    return tw
end

local function round(ui, radius)
    local c = Instance.new("UICorner", ui)
    c.CornerRadius = UDim.new(0, radius or 8)
end

-- ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CleanHubGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = guiParent

-- Main Frame
local frame = Instance.new("Frame", screenGui)
frame.Name = "MainFrame"
frame.Size = HUB_SZ
frame.Position = UDim2.new(0.5,0,0.5,0)
frame.AnchorPoint = Vector2.new(0.5,0.5)
frame.BackgroundColor3 = Color3.fromRGB(20,20,20)
frame.Active = true
frame.BorderSizePixel = 0
round(frame,10)

-- Dragging
local dragging, dragInput, dragStart, startPos
UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(
            startPos.X.Scale, startPos.X.Offset+delta.X,
            startPos.Y.Scale, startPos.Y.Offset+delta.Y
        )
    end
end)

local function enableDrag(target)
    target.InputBegan:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.MouseButton1 or i.UserInputType==Enum.UserInputType.Touch then
            dragging = true
            dragStart = i.Position
            startPos = frame.Position
            i.Changed:Connect(function()
                if i.UserInputState==Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    target.InputChanged:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.MouseMovement or i.UserInputType==Enum.UserInputType.Touch then
            dragInput = i
        end
    end)
end

-- Top Bar
local bar=Instance.new("Frame",frame)
bar.Size=UDim2.new(1,0,0,40)
bar.Position=UDim2.new(0,0,0,0)
bar.BackgroundColor3=Color3.fromRGB(40,40,40)
bar.Active=true
round(bar,10)
enableDrag(bar)

local title=Instance.new("TextLabel",bar)
title.Size=UDim2.new(1,-120,1,0)
title.Position = UDim2.new(0,10,0,0)
title.BackgroundTransparency=1
title.Font=Enum.Font.SourceSansBold
title.TextSize=24
title.Text="Clean Hub"
title.TextColor3=Color3.new(1,1,1)
title.TextXAlignment=Enum.TextXAlignment.Left

local closeBtn=Instance.new("TextButton",bar)
closeBtn.Size=UDim2.new(0,30,0,30)
closeBtn.Position=UDim2.new(1,-40,0,5)
closeBtn.Text="X"
closeBtn.Font=Enum.Font.SourceSansBold
closeBtn.TextSize=18
closeBtn.BackgroundColor3=Color3.fromRGB(200,50,50)
closeBtn.TextColor3=Color3.new(1,1,1)
round(closeBtn,4)

local minBtn=Instance.new("TextButton",bar)
minBtn.Size=UDim2.new(0,30,0,30)
minBtn.Position=UDim2.new(1,-80,0,5)
minBtn.Text="-"
minBtn.Font=Enum.Font.SourceSansBold
minBtn.TextSize=22
minBtn.BackgroundColor3=Color3.fromRGB(100,100,100)
minBtn.TextColor3=Color3.new(1,1,1)
round(minBtn,4)

-- Tabs + Content
local tabsFrame=Instance.new("Frame",frame)
tabsFrame.Size=UDim2.new(0,140,1,-60)
tabsFrame.Position=UDim2.new(0,0,0,50)
tabsFrame.BackgroundTransparency=1

local contentFrame=Instance.new("Frame",frame)
contentFrame.Size=UDim2.new(1,-140,1,-60)
contentFrame.Position=UDim2.new(0,140,0,50)
contentFrame.BackgroundTransparency=1
enableDrag(contentFrame)

-- Tab Names
local tabNames={"Cut Grass","Grass Upgrades","Rebirth Upgrades","Rebirth"}
local tabButtons={}

-- Global toggle states and loops
local cutGrassActive, cutGrassLoop = false, nil
local grassUpgradesActive, grassUpgradesLoop = false, nil
local rebirthUpgradesActive, rebirthUpgradesLoop = false, nil
local rebirthActive, rebirthLoop = false, nil

-- ================= Cut Grass Tab =================
local function buildCutGrassTab()
    for _,v in pairs(contentFrame:GetChildren()) do v:Destroy() end

    local btn = Instance.new("TextButton", contentFrame)
    btn.Size = UDim2.new(0,250,0,50)
    btn.Position = UDim2.new(0,20,0,20)
    round(btn,6)

    local function updateStyle()
        btn.Text = "Cut Grass: " .. (cutGrassActive and "ON" or "OFF")
        btn.BackgroundColor3 = cutGrassActive and Color3.fromRGB(0,150,0) or Color3.fromRGB(100,0,0)
    end

    updateStyle()

    btn.MouseButton1Click:Connect(function()
        cutGrassActive = not cutGrassActive
        updateStyle()

        if cutGrassActive and not cutGrassLoop then
            cutGrassLoop = RunService.Heartbeat:Connect(function()
                local args = { buffer.fromstring("\014\006\000Golden\004\0009600") }
                ReplicatedStorage:WaitForChild("ByteNetReliable"):FireServer(unpack(args))
            end)
        elseif not cutGrassActive and cutGrassLoop then
            cutGrassLoop:Disconnect()
            cutGrassLoop = nil
        end
    end)
end

-- ================= Grass Upgrades Tab =================
local function buildGrassUpgradesTab()
    for _,v in pairs(contentFrame:GetChildren()) do v:Destroy() end

    local btn = Instance.new("TextButton", contentFrame)
    btn.Size = UDim2.new(0,250,0,50)
    btn.Position = UDim2.new(0,20,0,20)
    round(btn,6)

    local function updateStyle()
        btn.Text = "Grass Upgrades: " .. (grassUpgradesActive and "ON" or "OFF")
        btn.BackgroundColor3 = grassUpgradesActive and Color3.fromRGB(0,150,0) or Color3.fromRGB(100,0,0)
    end

    updateStyle()

    btn.MouseButton1Click:Connect(function()
        grassUpgradesActive = not grassUpgradesActive
        updateStyle()

        if grassUpgradesActive and not grassUpgradesLoop then
            grassUpgradesLoop = RunService.Heartbeat:Connect(function()
                local args1 = { buffer.fromstring("\002\n\000SpawnRate1\000\001\0001\001\0007\005\000Grass\001\0005") }
                ReplicatedStorage:WaitForChild("ByteNetReliable"):FireServer(unpack(args1))
                local args2 = { buffer.fromstring("\002\n\000GrassValue\000\001\0001\002\00099\005\000Grass\001\0002") }
                ReplicatedStorage:WaitForChild("ByteNetReliable"):FireServer(unpack(args2))
                local args3 = { buffer.fromstring("\002\v\000GrassAmount\000\001\0001\002\00049\005\000Grass\001\0003") }
                ReplicatedStorage:WaitForChild("ByteNetReliable"):FireServer(unpack(args3))
            end)
        elseif not grassUpgradesActive and grassUpgradesLoop then
            grassUpgradesLoop:Disconnect()
            grassUpgradesLoop = nil
        end
    end)
end

-- ================= Rebirth Upgrades Tab =================
local function buildRebirthUpgradesTab()
    for _,v in pairs(contentFrame:GetChildren()) do v:Destroy() end

    local btn = Instance.new("TextButton", contentFrame)
    btn.Size = UDim2.new(0,250,0,50)
    btn.Position = UDim2.new(0,20,0,20)
    round(btn,6)

    local function updateStyle()
        btn.Text = "Rebirth Upgrades: " .. (rebirthUpgradesActive and "ON" or "OFF")
        btn.BackgroundColor3 = rebirthUpgradesActive and Color3.fromRGB(0,150,0) or Color3.fromRGB(100,0,0)
    end

    updateStyle()

    btn.MouseButton1Click:Connect(function()
        rebirthUpgradesActive = not rebirthUpgradesActive
        updateStyle()

        if rebirthUpgradesActive and not rebirthUpgradesLoop then
            rebirthUpgradesLoop = RunService.Heartbeat:Connect(function()
                local args1 = { buffer.fromstring("\002\n\000SpawnRate2\000\001\0001\001\0008\a\000Rebirth\001\0003") }
                ReplicatedStorage:WaitForChild("ByteNetReliable"):FireServer(unpack(args1))
                local args2 = { buffer.fromstring("\002\v\000BladeRadius\000\001\0001\001\0005\a\000Rebirth\001\0002") }
                ReplicatedStorage:WaitForChild("ByteNetReliable"):FireServer(unpack(args2))
                local args3 = { buffer.fromstring("\002\v\000GrassValue2\000\001\0001\001\0006\a\000Rebirth\003\000256") }
                ReplicatedStorage:WaitForChild("ByteNetReliable"):FireServer(unpack(args3))
            end)
        elseif not rebirthUpgradesActive and rebirthUpgradesLoop then
            rebirthUpgradesLoop:Disconnect()
            rebirthUpgradesLoop = nil
        end
    end)
end

-- ================= Rebirth Tab =================
local function buildRebirthTab()
    for _,v in pairs(contentFrame:GetChildren()) do v:Destroy() end

    local btn = Instance.new("TextButton", contentFrame)
    btn.Size = UDim2.new(0,250,0,50)
    btn.Position = UDim2.new(0,20,0,20)
    round(btn,6)

    local function updateStyle()
        btn.Text = "Rebirth: " .. (rebirthActive and "ON" or "OFF")
        btn.BackgroundColor3 = rebirthActive and Color3.fromRGB(0,150,0) or Color3.fromRGB(100,0,0)
    end

    updateStyle()

    btn.MouseButton1Click:Connect(function()
        rebirthActive = not rebirthActive
        updateStyle()

        if rebirthActive and not rebirthLoop then
            rebirthLoop = RunService.Heartbeat:Connect(function()
                local args = { buffer.fromstring("\t") }
                ReplicatedStorage:WaitForChild("ByteNetReliable"):FireServer(unpack(args))
            end)
        elseif not rebirthActive and rebirthLoop then
            rebirthLoop:Disconnect()
            rebirthLoop = nil
        end
    end)
end

-- Tab Functions Table
local tabFuncs = {buildCutGrassTab, buildGrassUpgradesTab, buildRebirthUpgradesTab, buildRebirthTab}

-- Tab Buttons
for i,name in ipairs(tabNames) do
    local btn = Instance.new("TextButton", tabsFrame)
    btn.Size = UDim2.new(1,0,0,40)
    btn.Position = UDim2.new(0,0,0,(i-1)*45)
    btn.Text = name
    btn.Font = Enum.Font.SourceSansBold
    btn.TextSize = 16
    btn.BackgroundColor3 = Color3.fromRGB(50,50,50)
    btn.TextColor3 = Color3.new(1,1,1)
    round(btn,6)
    local func = tabFuncs[i]
    btn.MouseButton1Click:Connect(func)
    table.insert(tabButtons, btn)
end

-- Close/Minimize
closeBtn.MouseButton1Click:Connect(function() screenGui:Destroy() end)
minBtn.MouseButton1Click:Connect(function()
    if frame.Size==HUB_SZ then
        tween(frame,{Size=MINIMIZED_SZ})
    else
        tween(frame,{Size=HUB_SZ})
    end
end)

-- Default tab
buildCutGrassTab()
